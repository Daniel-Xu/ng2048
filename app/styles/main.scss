@import "_functions";

$width: 400px;
$max-tile-count: 4;
$tile-padding: 15px;
$tile-radius: 3px;
$tile-font: 'Open Sans', sans-serif;
$colors: #EEE4DA, #EAE0C8, #F59563, #3399ff, #ffa333, #cef030, #2b81d6;

// DON'T EDIT BELOW
$tile-size:  ($width  / $max-tile-count) - ($tile-padding + ($tile-radius * 2));
$tile-height: ($width / $max-tile-count) - ($tile-padding + ($tile-radius * 2));

$tile-size: ($width - $tile-padding * ($max-tile-count + 1)) / $max-tile-count;

#game { 
  position: relative;
  padding: $tile-padding;
  cursor: default;
  -webkit-touch-callout: none;
  -ms-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -ms-touch-action: none;
  touch-action: none;
  background: #bbada0;
  border-radius: 6px;
  width: $width;
  height: $width;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  margin: 40px auto;

  .grid-container {
    position: absolute;
    z-index: 1;
    margin: 0 auto;

    .grid-row {
      margin-bottom: $tile-padding;
      &:after {
        content: "";
        display: block;
        clear: both;
      }
      &:last-child {
        margin-right: 0;
      }

      .grid-cell {
        width: $tile-size; //($width / $max-tile-count) - ($tile-padding + ($tile-radius * 2));
        height: $tile-size; //($width / $max-tile-count) - ($tile-padding + ($tile-radius * 2));
        margin-right: $tile-padding;
        float: left;
        @include border-radius($tile-radius);
        background: rgba(238, 228, 218, 0.35);
        &:last-child {
          margin-right: 0
        }
      }
    }
  }

  .tile-container {
    position: absolute;
    z-index: 2;

    .tile {
      font-family: $tile-font;
      position: absolute;
      @include transition(100ms);
      @include transition-property(transform);
      @include border-radius($tile-radius);
      width: $tile-size;
      height: $tile-size;

      &.ng-enter-active {
        @include animation(2s appear);
      }

      @for $x from 1 through $max-tile-count {
        @for $y from 1 through $max-tile-count {
          &.position-#{$x}-#{$y} { 
            $zeroOffsetX: $x - 1;
            $zeroOffsetY: $y - 1;
            $newX: ($tile-size) * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
            $newY: ($tile-size) * ($zeroOffsetY) + ($tile-padding * $zeroOffsetY);
            @include transform(translate($newX, $newY));
          }
          &.position-#{$x}-#{$y}-remove {
            @include animation(10s pop);
          }
        }
      }

      @for $i from 1 through length($colors) {
        &.tile-#{power(2, $i)} {
          background: nth($colors, $i)
        }
      }
      &:last-child {
        margin-right: 0
      }

      .tile-inner {
        line-height: ($width/$max-tile-count) - $tile-padding;

        text-align: center;
        font-weight: bold;
        z-index: 10;
        font-size: 3.5em;
      }
    }
  }
}

@include keyframes(appear) {
  0% {
    opacity: 0;
    @include transform(scale(0.5));
  }
  100% {
    opacity: 1;
    @include transform(scale(1));
  } 
}

@include keyframes(pop) {
  0% {
    opacity: 1;
    @include transform(scale(1));
  }
  50% {
    @include transform(scale(1.5));
  }
  100% {
    opacity: 0;
    @include transform(scale(1));
  }
}
